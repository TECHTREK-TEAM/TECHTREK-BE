plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'mysql:mysql-connector-java:8.0.33'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation 'com.h2database:h2'  // H2 DB 의존성 추가
	implementation 'org.springframework.boot:spring-boot-starter-data-redis' // redis
	implementation 'org.apache.pdfbox:pdfbox:2.0.29' // 자바 기반 PDF 파일 텍스트 추출
	implementation 'org.json:json:20230227' //JSONException 라이브러리
	implementation 'org.springframework.boot:spring-boot-starter-validation' // Bean Validation (javax.validation)
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0' // swagger

	// 시큐리티
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.security:spring-security-oauth2-client'

	// JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

}


tasks.named('test') {
	useJUnitPlatform()
}
